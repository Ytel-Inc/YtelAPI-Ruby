# ytel_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module YtelApi
  # Body40 Model.
  class Body40 < BaseModel
    # The Short Code number that is the sender of this message
    # @return [String]
    attr_accessor :shortcode

    # A valid 10-digit number that should receive the message
    # @return [String]
    attr_accessor :to

    # The unique identifier for the template used for the message
    # @return [UUID | String]
    attr_accessor :templateid

    # format of your data, example: {companyname}:test,{otpcode}:1234
    # @return [String]
    attr_accessor :data

    # Specifies the HTTP method used to request the required URL once the Short
    # Code message is sent.
    # @return [String]
    attr_accessor :method

    # URL that can be requested to receive notification when Short Code message
    # was sent.
    # @return [String]
    attr_accessor :message_status_callback

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['shortcode'] = 'shortcode'
      @_hash['to'] = 'to'
      @_hash['templateid'] = 'templateid'
      @_hash['data'] = 'data'
      @_hash['method'] = 'Method'
      @_hash['message_status_callback'] = 'MessageStatusCallback'
      @_hash
    end

    def initialize(shortcode = nil,
                   to = nil,
                   templateid = nil,
                   data = nil,
                   method = nil,
                   message_status_callback = nil)
      @shortcode = shortcode
      @to = to
      @templateid = templateid
      @data = data
      @method = method
      @message_status_callback = message_status_callback
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      shortcode = hash['shortcode']
      to = hash['to']
      templateid = hash['templateid']
      data = hash['data']
      method = hash['Method']
      message_status_callback = hash['MessageStatusCallback']

      # Create object from extracted values.
      Body40.new(shortcode,
                 to,
                 templateid,
                 data,
                 method,
                 message_status_callback)
    end
  end
end
