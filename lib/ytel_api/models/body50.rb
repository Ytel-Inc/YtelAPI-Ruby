# ytel_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module YtelApi
  # Body50 Model.
  class Body50 < BaseModel
    # The page count to retrieve from the total results in the collection. Page
    # indexing starts at 1.
    # @return [Integer]
    attr_accessor :page

    # The count of objects to return per page.
    # @return [Integer]
    attr_accessor :pagesize

    # The state of the transcription.
    # @return [StatusEnum]
    attr_accessor :status

    # The date the transcription took place.
    # @return [String]
    attr_accessor :date_transcribed

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['page'] = 'page'
      @_hash['pagesize'] = 'pagesize'
      @_hash['status'] = 'status'
      @_hash['date_transcribed'] = 'dateTranscribed'
      @_hash
    end

    def initialize(page = nil,
                   pagesize = nil,
                   status = nil,
                   date_transcribed = nil)
      @page = page
      @pagesize = pagesize
      @status = status
      @date_transcribed = date_transcribed
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      page = hash['page']
      pagesize = hash['pagesize']
      status = hash['status']
      date_transcribed = hash['dateTranscribed']

      # Create object from extracted values.
      Body50.new(page,
                 pagesize,
                 status,
                 date_transcribed)
    end
  end
end
