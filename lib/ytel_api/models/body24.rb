# ytel_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module YtelApi
  # Body24 Model.
  class Body24 < BaseModel
    # The unique identifier for the in-progress voice call.
    # @return [String]
    attr_accessor :call_sid

    # The direction the audio effect should be placed on. If IN, the effects
    # will occur on the incoming audio stream. If OUT, the effects will occur on
    # the outgoing audio stream.
    # @return [AudioDirectionEnum]
    attr_accessor :audio_direction

    # Set the pitch in semitone (half-step) intervals. Value between -14 and 14
    # @return [Float]
    attr_accessor :pitch_semi_tones

    # Set the pitch in octave intervals.. Value between -1 and 1
    # @return [Float]
    attr_accessor :pitch_octaves

    # Set the pitch (lowness/highness) of the audio. The higher the value, the
    # higher the pitch. Value greater than 0
    # @return [Float]
    attr_accessor :pitch

    # Set the rate for audio. The lower the value, the lower the rate. value
    # greater than 0
    # @return [Float]
    attr_accessor :rate

    # Set the tempo (speed) of the audio. A higher value denotes a faster tempo.
    # Value greater than 0
    # @return [Float]
    attr_accessor :tempo

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['call_sid'] = 'CallSid'
      @_hash['audio_direction'] = 'AudioDirection'
      @_hash['pitch_semi_tones'] = 'PitchSemiTones'
      @_hash['pitch_octaves'] = 'PitchOctaves'
      @_hash['pitch'] = 'Pitch'
      @_hash['rate'] = 'Rate'
      @_hash['tempo'] = 'Tempo'
      @_hash
    end

    def initialize(call_sid = nil,
                   audio_direction = nil,
                   pitch_semi_tones = nil,
                   pitch_octaves = nil,
                   pitch = nil,
                   rate = nil,
                   tempo = nil)
      @call_sid = call_sid
      @audio_direction = audio_direction
      @pitch_semi_tones = pitch_semi_tones
      @pitch_octaves = pitch_octaves
      @pitch = pitch
      @rate = rate
      @tempo = tempo
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      call_sid = hash['CallSid']
      audio_direction = hash['AudioDirection']
      pitch_semi_tones = hash['PitchSemiTones']
      pitch_octaves = hash['PitchOctaves']
      pitch = hash['Pitch']
      rate = hash['Rate']
      tempo = hash['Tempo']

      # Create object from extracted values.
      Body24.new(call_sid,
                 audio_direction,
                 pitch_semi_tones,
                 pitch_octaves,
                 pitch,
                 rate,
                 tempo)
    end
  end
end
