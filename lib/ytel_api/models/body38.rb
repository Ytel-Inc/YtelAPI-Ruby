# ytel_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module YtelApi
  # Body38 Model.
  class Body38 < BaseModel
    # Only list messages sent from this Short Code
    # @return [String]
    attr_accessor :shortcode

    # Only list messages sent to this number
    # @return [String]
    attr_accessor :to

    # Only list messages sent with the specified date
    # @return [String]
    attr_accessor :date_sent

    # The page count to retrieve from the total results in the collection. Page
    # indexing starts at 1.
    # @return [Integer]
    attr_accessor :page

    # The count of objects to return per page.
    # @return [Integer]
    attr_accessor :page_size

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['shortcode'] = 'Shortcode'
      @_hash['to'] = 'To'
      @_hash['date_sent'] = 'DateSent'
      @_hash['page'] = 'Page'
      @_hash['page_size'] = 'PageSize'
      @_hash
    end

    def initialize(shortcode = nil,
                   to = nil,
                   date_sent = nil,
                   page = nil,
                   page_size = nil)
      @shortcode = shortcode
      @to = to
      @date_sent = date_sent
      @page = page
      @page_size = page_size
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      shortcode = hash['Shortcode']
      to = hash['To']
      date_sent = hash['DateSent']
      page = hash['Page']
      page_size = hash['PageSize']

      # Create object from extracted values.
      Body38.new(shortcode,
                 to,
                 date_sent,
                 page,
                 page_size)
    end
  end
end
